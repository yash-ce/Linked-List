# C++


#include <iostream>
#include <bits/stdc++.h>

using namespace std;

class node{
    public:
    int val;
    node *next;

    node(int num){
        val = num;
        next = NULL;

    }
};

void insertAtTail(node* &head, int val){
    node* n = new node(val);
    node* temp = head;

    if(head == NULL){
        head = n;
        return;
    }

    while(temp->next != NULL){
        temp = temp->next;
    }
    temp->next = n;
}

void display(node* head){
    node* temp = head;
    while (temp != NULL)
    {
        /* code */
        cout<<temp->val<< " ";
        temp = temp->next;
    }
    cout<< endl;
}

void deleteAtHead(node* &head){
    node* todelete = head;
    head = head->next;
    delete todelete;
}

void deletion(node* &head, int val){
    if(head == NULL){
        return;
    }
    if(head->next == NULL){
        deleteAtHead(head);
        return;
    }
    node* temp = head;
    while(temp->next->val != val){
        temp = temp->next;
    }
    node* todelete = temp->next;
    temp->next = temp->next->next;
    delete todelete;

}

void insertAtHead(node* &head, int val){
    node* n = new node(val);
    node* temp = head;
    if(head == NULL){
        head = n;
        return;
    }
    n->next = head;
    head = n; 
}

// void deleteAtHead(node* &head){
//     node* todelete = head;
//     head = head->next;
//     delete todelete;
// }

int main(){

    node* head = NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 2);
    insertAtTail(head, 3);
    insertAtTail(head, 4);
    insertAtTail(head, 5);
    display(head);
    insertAtHead(head, 10);
    display(head);
    deletion(head, 3);
    display(head);
    deleteAtHead(head);
    display(head);
    return 0;
}
